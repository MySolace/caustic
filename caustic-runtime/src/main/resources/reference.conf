caustic.runtime {

  server {
    # A hostname.
    host = "localhost"

    # A port number.
    port = 9090

    # A stack of cache implementations.
    caches = []

    # A database implementation.
    database = "local"

    # A service discovery trigger. Discoverable servers are automatically registered in the registry
    # configured below whenever they come online, so that clients can dynamically discover their
    # network location. Otherwise, servers will operate as standalone instances that are only
    # accessible by clients with prior knowledge of their network location.
    discoverable = on
  }

  registry {
    # A ZooKeeper connection string. Connection strings are formed from the comma-delimited list of
    # host:port locations for the various ZooKeeper instances participating in the ensemble. For
    # example, a connection string might be "localhost:2181,locahost:3101".
    zookeeper = "localhost:2181"

    # A ZooKeeper path. Namespaces correspond to the ZooKeeper directory in which server instances
    # are registered. No other process should alter the contents of this path.
    namespace = "/services/caustic"

    # A ZooKeeper connection timeout. Connection timeouts correspond to the duration a ZooKeeper
    # client is willing to wait to establish a connection. The connection timeout must be less than
    # or equal to the session timeout.
    connection-timeout = 15 s

    # A ZooKeeper session timeout. Session timeouts correspond to the duration of disconnectivity
    # after which ZooKeeper considers a client to be expired. Clients must renegotiate a new session
    # when their session expires. The session timeout must exceed the connection timeout.
    session-timeout = 60 s
  }

  cache {

    local {

      # A duration following the last access to a cache line after which it is evicted.
      expiration = 300 s

      # An upper bound on number of cache lines.
      maximum-size = 10000

    }

    redis {

      #
      host = "localhost"

      #
      port = 6379

      #
      password = ""

    }

  }

  database {

    local {

    }

    mysql {

      # A database username.
      username = "root"

      # A corresponding database password.
      password = ""

      # A JDBC driver class.
      driverClass = "com.mysql.cj.jdbc.Driver"

      # A JDBC connection url.
      jdbcUrl = "jdbc:mysql://localhost:3306/test?serverTimezone=UTC"

    }

    postgres {

      # A database username.
      username = "postgres"

      # A corresponding database password.
      password = ""

      # A JDBC driver class.
      driverClass = "org.postgresql.Driver"

      # A JDBC connection url.
      jdbcUrl = "jdbc:postgresql://localhost:5432/test?serverTimezone=UTC"

    }

  }

}